/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/domControl.js":
/*!***************************!*\
  !*** ./src/domControl.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\n  createShips,\n  gameBoard\n} = __webpack_require__(/*! ./ships */ \"./src/ships.js\");\nconst {\n  startGame\n} = __webpack_require__(/*! ./gameloop */ \"./src/gameloop.js\");\nconst domControl = (() => {\n  const enemysBox = document.querySelector('.enemysBox');\n  const startButton = document.createElement('button');\n  startButton.textContent = 'Start Game';\n  startButton.classList.add('start-button');\n  const contentContainer = document.querySelector('.contentContainer');\n  contentContainer.appendChild(startButton);\n  const fieldPlayer = gameBoard.players.Player1;\n  const fieldEnemy = gameBoard.players.Player2;\n  fieldEnemy.ships = gameBoard.shipMaker();\n  gameBoard.createFields(fieldEnemy);\n\n  // fieldPlayer.ships = gameBoard.shipMaker()\n  gameBoard.createFields(fieldPlayer);\n  let shipsCreated = false;\n  function resetArrays() {\n    // Clear the fieldPlayer.arrays object\n    Object.keys(fieldPlayer.arrays).forEach(arrayKey => {\n      const array = fieldPlayer.arrays[arrayKey];\n      for (let i = 0; i < array.length; i++) {\n        array[i] = ''; // Set the index to an empty string\n      }\n    });\n  }\n\n  let shipName;\n  const appendFieldsToPlayer = () => {\n    if (!shipsCreated) {\n      fieldPlayer.ships = gameBoard.shipMaker();\n      shipsCreated = true;\n    }\n    resetArrays(); // Reset the arrays in fieldPlayer\n\n    gameBoard.storedShips.forEach(storedShip => {\n      if (storedShip.player === fieldPlayer.name) {\n        const {\n          alphabet,\n          number,\n          shipName,\n          orientation\n        } = storedShip;\n        try {\n          gameBoard.placingShips(fieldPlayer, alphabet, number, shipName, orientation);\n        } catch (error) {\n          // Invalid placement, handle error if needed\n        }\n      }\n    });\n\n    // fieldPlayer.ships = gameBoard.shipMaker()\n    // gameBoard.createFields(fieldPlayer)\n\n    // Clear the content element\n    const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n    const content = document.querySelector('.content');\n    const playersBox = document.querySelector('.playersBox');\n    content.innerHTML = '';\n\n    //  resetArrays()\n    // Iterate over the alphabet keys (a-j)\n    for (let index = 0; index < 10; index++) {\n      const arrayName = String.fromCharCode(97 + index);\n      const array = fieldPlayer.arrays[arrayName];\n\n      // Create a row element for each array\n      const rowElement = document.createElement('div');\n      rowElement.className = 'row';\n\n      // Iterate over the elements in the array\n      for (let i = 0; i < array.length; i++) {\n        const cellElement = document.createElement('div');\n        cellElement.className = 'cell';\n\n        // Add alphabet, array, and index as data attributes\n        cellElement.setAttribute('data-array', arrayName);\n        cellElement.setAttribute('data-index', i + 1);\n        if (array[i]) {\n          cellElement.classList.add('ship');\n          cellElement.style.backgroundColor = \"lightblue\";\n          cellElement.textContent = \"\"; // Delete text content\n\n          // Find the ship name associated with the current cell\n          shipName = Object.keys(fieldPlayer.ships).find(name => fieldPlayer.ships[name] === array[i]);\n\n          // Set the ship name as a data attribute\n          cellElement.setAttribute('data-ship-name', shipName);\n          cellElement.classList.add(shipName);\n          if (i === 0) {\n            cellElement.classList.add('ship-start'); // Add ship-start class to first cell of the ship\n          }\n        }\n\n        // Append the cell element to the row element\n        rowElement.appendChild(cellElement);\n      }\n\n      // Append the row element to the content element\n      content.appendChild(rowElement);\n    }\n    const alphabetRow = document.createElement('div');\n    alphabetRow.className = 'alphabet';\n    alphabet.forEach(letter => {\n      const letterDiv = document.createElement('div');\n      letterDiv.className = 'alphabet-cell';\n      letterDiv.textContent = letter;\n      alphabetRow.appendChild(letterDiv);\n    });\n    const numbersRow = document.createElement('div');\n    numbersRow.className = 'numbers';\n    numbers.forEach(number => {\n      const numberDiv = document.createElement('div');\n      numberDiv.className = 'number-cell';\n      numberDiv.textContent = number;\n      numbersRow.appendChild(numberDiv);\n    });\n    playersBox.appendChild(alphabetRow);\n    playersBox.appendChild(numbersRow);\n    const shipElements = document.querySelectorAll('.ship');\n    const cellElements = document.querySelectorAll('.cell');\n    let selectedShipCells = null;\n    let shipElement = null;\n\n    // ...\n\n    const dragStartHandler = event => {\n      const clickedCell = event.target;\n      shipElement = clickedCell.closest('.ship');\n      if (shipElement) {\n        event.stopPropagation();\n        const shipName = shipElement.getAttribute('data-ship-name');\n        const shipCells = Array.from(document.querySelectorAll(`.cell[data-ship-name=\"${shipName}\"]`));\n        const firstCellArray = shipCells[0].getAttribute('data-array');\n        const isVertical = shipCells.every(cell => cell.getAttribute('data-array') === firstCellArray);\n        shipCells.forEach(cell => {\n          cell.classList.add('dragging');\n          if (cell === clickedCell) {\n            cell.classList.add('ship-start');\n          }\n        });\n\n        // Create a custom drag image\n        const dragImage = document.createElement('div');\n        dragImage.className = 'drag-image';\n        if (isVertical) {\n          const shipHeight = shipCells.length * clickedCell.offsetHeight;\n          dragImage.style.width = `${clickedCell.offsetHeight}px`;\n          dragImage.style.height = `${shipHeight}px`;\n        } else {\n          const shipWidth = shipCells.length * clickedCell.offsetHeight;\n          dragImage.style.width = `${shipWidth}px`;\n          dragImage.style.height = `${clickedCell.offsetHeight}px`;\n        }\n        dragImage.style.backgroundColor = 'lightblue'; // Set the desired background color\n        event.dataTransfer.setDragImage(dragImage, 0, 0);\n        document.body.appendChild(dragImage);\n\n        // Store a reference to the selected ship cells\n        selectedShipCells = shipCells;\n      }\n    };\n    const dragOverHandler = event => {\n      event.preventDefault();\n    };\n    const dragEndHandler = () => {\n      const cells = document.querySelectorAll('.cell.dragging');\n      cells.forEach(cell => {\n        cell.classList.remove('dragging');\n      });\n      selectedShipCells = null;\n    };\n    const dropHandler = event => {\n      event.preventDefault();\n      if (selectedShipCells) {\n        const targetCell = event.target.closest('.cell');\n        if (targetCell) {\n          const clickedArray = targetCell.dataset.array;\n          const clickedIndex = parseInt(targetCell.dataset.index);\n          console.log('Dropping ship on target cell:', targetCell);\n          console.log('Clicked Array:', clickedArray);\n          console.log('Clicked Index:', clickedIndex);\n          const clickedShipName = selectedShipCells[0].dataset.shipName;\n          console.log(clickedShipName);\n          const clickedShipData = gameBoard.storedShips.find(shipData => shipData.shipName.name === clickedShipName && shipData.player === fieldPlayer.name);\n          console.log(clickedShipData);\n          if (clickedShipData) {\n            const {\n              alphabet,\n              number,\n              shipName,\n              orientation\n            } = clickedShipData;\n            const clickedShipIndex = gameBoard.storedShips.findIndex(ship => ship.player === fieldPlayer.name && ship.shipName.name === clickedShipName);\n            console.log(gameBoard.storedShips[clickedShipIndex]);\n            if (clickedShipIndex !== -1) {\n              // Update the coordinates in the storedShips array\n              gameBoard.storedShips[clickedShipIndex].alphabet = clickedArray;\n              gameBoard.storedShips[clickedShipIndex].number = clickedIndex;\n\n              // Remove the ship from its old position in fieldPlayer.arrays\n              const oldAlphabet = clickedShipData.alphabet;\n              const oldNumber = clickedShipData.number;\n              console.log(gameBoard.storedShips[clickedShipIndex]);\n            }\n            resetArrays();\n\n            // // Repost all ships from stored ships, excluding the clicked ship\n            gameBoard.storedShips.forEach(storedShip => {\n              if (storedShip.player === fieldPlayer.name && storedShip.shipName.name !== clickedShipName) {\n                const {\n                  alphabet,\n                  number,\n                  shipName,\n                  orientation\n                } = storedShip;\n                gameBoard.placingShips(fieldPlayer, alphabet, number, shipName, orientation);\n              }\n            });\n            try {\n              // Try placing the clicked ship with the new coordinates\n              gameBoard.placingShips(fieldPlayer, clickedArray, clickedIndex, shipName, orientation);\n              clickedShipData.coordinates = {\n                array: clickedArray,\n                index: clickedIndex\n              };\n              console.log('Clicked ship placed with new coordinates:', clickedShipData);\n\n              // // Update the coordinates in storedShips\n              const storedShipIndex = gameBoard.storedShips.findIndex(storedShip => storedShip.player === fieldPlayer.name && storedShip.shipName.name === clickedShipName);\n              if (storedShipIndex !== -1) {\n                gameBoard.storedShips[storedShipIndex].coordinates = {\n                  array: clickedArray,\n                  index: clickedIndex\n                };\n                console.log('Clicked ship coordinates updated in storedShips:', gameBoard.storedShips[storedShipIndex]);\n              }\n              appendFieldsToPlayer();\n            } catch (error) {\n              // Invalid placement, revert to original coordinates\n              clickedShipData.alphabet = alphabet;\n              clickedShipData.number = number;\n              gameBoard.placingShips(fieldPlayer, alphabet, number, shipName, orientation);\n              console.log(clickedShipData.alphabet, clickedShipData.number);\n              console.log(fieldPlayer.arrays);\n              console.log('Invalid placement, reverting to original coordinates:', error);\n              console.log(shipElements);\n              selectedShipCells.forEach(ship => {\n                ship.classList.add('vibrate');\n                setTimeout(() => {\n                  ship.classList.remove('vibrate');\n                }, 5000);\n              });\n              setTimeout(() => {\n                appendFieldsToPlayer();\n              }, 1000);\n            }\n          }\n        }\n      }\n    };\n\n    // Attach event listeners to cell elements\n\n    cellElements.forEach(cellElement => {\n      cellElement.addEventListener('dragover', dragOverHandler);\n      cellElement.addEventListener('drop', dropHandler);\n      const shipElement = cellElement.closest('.ship');\n      if (shipElement) {\n        cellElement.draggable = true;\n        cellElement.addEventListener('dragstart', dragStartHandler);\n        cellElement.addEventListener('dragend', dragEndHandler);\n      }\n    });\n    const clickHandler = event => {\n      console.log('Clicked on shipElement');\n      const clickedCell = event.currentTarget;\n      const clickedArray = clickedCell.dataset.array;\n      const clickedIndex = clickedCell.dataset.index;\n      console.log('Clicked Cell:', clickedCell);\n      console.log('Clicked Array:', clickedArray);\n      console.log('Clicked Index:', clickedIndex);\n\n      // Find the ship name based on the clicked cell\n      const clickedShipName = clickedCell.dataset.shipName;\n      const clickedShipData = gameBoard.storedShips.find(shipData => {\n        return shipData.player === fieldPlayer.name && shipData.shipName.name === clickedShipName;\n      });\n      if (clickedShipData) {\n        console.log('Clicked Ship Data:', clickedShipData);\n        const {\n          alphabet,\n          number,\n          shipName,\n          orientation\n        } = clickedShipData;\n        const newOrientation = orientation === 'vertical' ? 'horizontal' : 'vertical';\n\n        // Empty the fieldPlayer.arrays object\n        resetArrays();\n\n        // Repost all ships from stored ships, excluding the clicked ship\n        gameBoard.storedShips.forEach(storedShip => {\n          if (storedShip.player === fieldPlayer.name && storedShip.shipName.name !== clickedShipName) {\n            const {\n              alphabet,\n              number,\n              shipName,\n              orientation\n            } = storedShip;\n            gameBoard.placingShips(fieldPlayer, alphabet, number, shipName, orientation);\n          }\n        });\n        try {\n          // Try placing the clicked ship with the new orientation\n          gameBoard.placingShips(fieldPlayer, alphabet, number, shipName, newOrientation);\n          clickedShipData.orientation = newOrientation;\n          console.log('Clicked ship placed with new orientation:', clickedShipData);\n\n          // Update the orientation in storedShips\n          const storedShipIndex = gameBoard.storedShips.findIndex(storedShip => storedShip.player === fieldPlayer.name && storedShip.shipName.name === clickedShipName);\n          if (storedShipIndex !== -1) {\n            gameBoard.storedShips[storedShipIndex].orientation = newOrientation;\n            console.log('Clicked ship orientation updated in storedShips:', gameBoard.storedShips[storedShipIndex]);\n          }\n          appendFieldsToPlayer();\n        } catch (error) {\n          // Invalid placement, revert to original orientation\n          gameBoard.placingShips(fieldPlayer, alphabet, number, shipName, orientation);\n          console.log('Invalid placement, reverting to original orientation:', error);\n          const shipCells = document.querySelectorAll(`[data-ship-name=\"${clickedShipName}\"]`);\n          shipCells.forEach(cell => {\n            cell.classList.add('vibrate');\n            setTimeout(() => {\n              cell.classList.remove('vibrate');\n            }, 5000);\n          });\n          setTimeout(() => {\n            appendFieldsToPlayer();\n          }, 1000);\n        }\n      }\n    };\n    shipElements.forEach(shipElement => {\n      shipElement.addEventListener('dblclick', clickHandler);\n    });\n    startButton.addEventListener('click', () => {\n      shipElements.forEach(shipElement => {\n        shipElement.removeEventListener('dblclick', clickHandler);\n      });\n      cellElements.forEach(cellElement => {\n        cellElement.removeEventListener('dragover', dragOverHandler);\n        cellElement.removeEventListener('drop', dropHandler);\n        const shipElement = cellElement.closest('.ship');\n        if (shipElement) {\n          cellElement.draggable = false;\n          cellElement.removeEventListener('dragstart', dragStartHandler);\n          cellElement.removeEventListener('dragend', dragEndHandler);\n        }\n      });\n      changeLayout();\n      startButton.remove();\n      startGame(fieldEnemy, fieldPlayer);\n    });\n    function changeLayout() {\n      enemysBox.style.display = 'grid';\n      contentContainer.style.setProperty('--blur', 'none');\n      contentContainer.classList.add('new-layout');\n      content.classList.add('new-layout');\n      playersBox.classList.add('new-layout');\n      alphabetRow.classList.add('new-layout');\n      numbersRow.classList.add('new-layout');\n    }\n  };\n  const appendFieldsToEnemy = () => {\n    // Clear the content element\n    const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n    const numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\n    const content2 = document.querySelector('.content2');\n    const enemysBox = document.querySelector('.enemysBox');\n    content2.innerHTML = '';\n\n    // Iterate over the alphabet keys (a-j)\n    for (let index = 0; index < 10; index++) {\n      const arrayName = String.fromCharCode(97 + index);\n      const array = fieldEnemy.arrays[arrayName];\n\n      // Create a row element for each array\n      const rowElement = document.createElement('div');\n      rowElement.className = 'row';\n\n      // Iterate over the elements in the array\n      for (let i = 0; i < array.length; i++) {\n        const cellElement = document.createElement('div');\n        cellElement.className = 'cell2';\n        cellElement.setAttribute('data-array2', arrayName);\n        cellElement.setAttribute('data-index2', i + 1);\n        if (array[i]) {\n          cellElement.classList.add('ship2');\n          cellElement.style.backgroundColor = \"lightblue\";\n          cellElement.textContent = \"\"; // Delete text content\n\n          // Find the ship name associated with the current cell\n          shipName = Object.keys(fieldEnemy.ships).find(name => fieldEnemy.ships[name] === array[i]);\n\n          // Set the ship name as a data attribute\n          cellElement.setAttribute('data-ship-name', shipName);\n        }\n\n        // Append the cell element to the row element\n        rowElement.appendChild(cellElement);\n      }\n\n      // Append the row element to the content element\n      content2.appendChild(rowElement);\n    }\n    const alphabetRow = document.createElement('div');\n    alphabetRow.className = 'alphabet2';\n    alphabet.forEach(letter => {\n      const letterDiv = document.createElement('div');\n      letterDiv.className = 'alphabet-cell2';\n      letterDiv.textContent = letter;\n      alphabetRow.appendChild(letterDiv);\n    });\n    const numbersRow = document.createElement('div');\n    numbersRow.className = 'numbers2';\n    numbers.forEach(number => {\n      const numberDiv = document.createElement('div');\n      numberDiv.className = 'number-cell';\n      numberDiv.textContent = number;\n      numbersRow.appendChild(numberDiv);\n    });\n    enemysBox.appendChild(alphabetRow);\n    enemysBox.appendChild(numbersRow);\n  };\n  console.log(gameBoard.storedShips);\n  const generatePlacedShips = player => {\n    const alphabet = 'abcdefghij';\n    const numberRange = Array.from({\n      length: 10\n    }, (_, i) => i + 1);\n    const orientations = ['vertical', 'horizontal'];\n    const getRandomPosition = () => ({\n      alphabet: alphabet[Math.floor(Math.random() * alphabet.length)],\n      number: numberRange[Math.floor(Math.random() * numberRange.length)]\n    });\n    const getRandomOrientation = () => orientations[Math.floor(Math.random() * orientations.length)];\n    for (const shipName in player.ships) {\n      const ship = player.ships[shipName];\n      let placed = false;\n      while (!placed) {\n        const {\n          alphabet,\n          number\n        } = getRandomPosition();\n        const orientation = getRandomOrientation();\n        try {\n          gameBoard.placingShips(player, alphabet, number, ship, orientation);\n          placed = true;\n          const placedShip = {\n            player: player.name,\n            shipName: player.ships[shipName],\n            alphabet,\n            number,\n            orientation\n          };\n          gameBoard.storedShips.push(placedShip);\n          appendFieldsToPlayer();\n          appendFieldsToEnemy();\n        } catch (error) {\n          // Invalid placement, try again\n        }\n      }\n    }\n  };\n  appendFieldsToPlayer();\n  generatePlacedShips(fieldEnemy);\n  generatePlacedShips(fieldPlayer);\n  return {\n    appendFieldsToPlayer,\n    appendFieldsToEnemy,\n    fieldPlayer,\n    fieldEnemy\n  };\n})();\n\n// Export the factory object\nmodule.exports = domControl;\n\n//# sourceURL=webpack://restoran/./src/domControl.js?");

/***/ }),

/***/ "./src/gameloop.js":
/*!*************************!*\
  !*** ./src/gameloop.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\n  createShips,\n  gameBoard\n} = __webpack_require__(/*! ./ships */ \"./src/ships.js\");\nconst {\n  domControl,\n  appendFieldsToPlayer,\n  fieldPlayer,\n  fieldEnemy\n} = __webpack_require__(/*! ./domControl */ \"./src/domControl.js\");\nlet currentArray, currentIndex;\nlet direction;\nlet shipHit = false;\nlet directionHit;\nlet gameFinished = false;\nlet hitArray;\nlet hitIndex;\nfunction startGame(fieldEnemy, fieldPlayer) {\n  const cellElements2 = document.querySelectorAll('.cell2');\n  function handleClick(event) {\n    if (gameFinished) {\n      console.log('yeah');\n      return; // Ignore clicks if the game is finished\n    }\n\n    const cellElement2 = event.target;\n    if (cellElement2.classList.contains('clicked')) {\n      return; // Ignore if the cell has already been clicked\n    }\n\n    console.log(gameBoard.areAllShipsSunk(fieldEnemy));\n    cellElement2.classList.add('clicked');\n    const clickedArray = cellElement2.getAttribute('data-array2');\n    const clickedIndex = parseInt(cellElement2.getAttribute('data-index2'), 10);\n    if (cellElement2.classList.contains('ship2')) {\n      cellElement2.style.backgroundColor = 'red';\n      gameBoard.receiveAttack(fieldEnemy, clickedArray, clickedIndex);\n      const shipName = cellElement2.getAttribute('data-ship-name');\n      const ship = fieldEnemy.ships[shipName];\n      if (ship.isSunk()) {\n        const sunkShipNulls = fieldEnemy.shipNullCells[shipName];\n        if (sunkShipNulls) {\n          for (const coordinate of sunkShipNulls) {\n            const {\n              alphabet,\n              num\n            } = coordinate;\n            const cell = document.querySelector(`[data-array2=\"${alphabet}\"][data-index2=\"${num}\"]`);\n            if (cell) {\n              if (cell.style.backgroundColor !== 'gray') {\n                cell.style.backgroundColor = 'green';\n              }\n              cell.classList.add('clicked');\n            }\n          }\n        }\n      }\n      if (gameBoard.areAllShipsSunk(fieldEnemy)) {\n        endGame();\n        return;\n      } else {\n        computerMoves();\n      }\n    } else {\n      cellElement2.style.backgroundColor = 'gray';\n      gameBoard.receiveAttack(fieldEnemy, clickedArray, clickedIndex);\n      computerMoves();\n    }\n  }\n  function computerMoves() {\n    let validMove = false;\n    while (!validMove) {\n      if (!currentArray || !currentIndex || !shipHit) {\n        const randomValues = gameBoard.generateRandom();\n        currentArray = randomValues.char;\n        currentIndex = randomValues.number;\n        hitArray = null;\n        hitIndex = null;\n        direction = null;\n        directionHit = null;\n        shipHit = false;\n      } else {\n        currentArray = getNextArray(currentArray, direction);\n        currentIndex = getNextIndex(currentIndex, direction);\n      }\n      if (isWithinBoundaries(currentArray, currentIndex) && !isCellClicked(currentArray, currentIndex)) {\n        validMove = true;\n        const currentCell = document.querySelector(`[data-array=\"${currentArray}\"][data-index=\"${currentIndex}\"]`);\n        currentCell.classList.add('clicked');\n        if (currentCell.classList.contains('ship')) {\n          currentCell.style.backgroundColor = 'red';\n          gameBoard.receiveAttack(fieldPlayer, currentArray, currentIndex);\n          computerShipHit(currentCell);\n          shipHit = true;\n          if (gameBoard.areAllShipsSunk(fieldPlayer)) {\n            endGame();\n          }\n          const shipName = currentCell.getAttribute('data-ship-name');\n          const ship = fieldPlayer.ships[shipName];\n          if (ship.isSunk()) {\n            currentArray = null;\n            currentIndex = null;\n            shipHit = false;\n            hitArray = null;\n            hitIndex = null;\n            direction = null;\n            directionHit = null;\n          } else {\n            if (!hitArray && !hitIndex) {\n              hitArray = currentArray;\n              hitIndex = currentIndex;\n              direction = getRandomDirection();\n              directionHit = direction;\n            }\n          }\n        } else {\n          currentCell.style.backgroundColor = 'gray';\n          gameBoard.receiveAttack(fieldPlayer, currentArray, currentIndex);\n          if (shipHit) {\n            const oppositeDirection = getOppositeDirection(directionHit);\n            currentArray = hitArray;\n            currentIndex = hitIndex;\n            if (!isWithinBoundaries(currentArray, currentIndex) || isCellClicked(currentArray, currentIndex) || !currentCell.classList.contains('ship')) {\n              // Ship was not hit in the current direction, backtrack to the first hit\n              currentArray = hitArray;\n              currentIndex = hitIndex;\n              if (directionHit === 'right' || directionHit === 'left') {\n                // Switch to the opposite direction\n                direction = oppositeDirection;\n                directionHit = direction;\n              } else if (directionHit === 'up' || directionHit === 'down') {\n                // Switch to the opposite direction\n                direction = oppositeDirection;\n                directionHit = direction;\n              }\n            } else {\n              // Update directionHit\n              direction = directionHit;\n            }\n          } else {\n            direction = getRandomDirection();\n          }\n        }\n      } else {\n        direction = getRandomDirection();\n      }\n    }\n  }\n  function getRandomDirection() {\n    const directions = ['up', 'right', 'down', 'left'];\n    return directions[Math.floor(Math.random() * directions.length)];\n  }\n  function getOppositeDirection(direction) {\n    const oppositeDirections = {\n      up: 'down',\n      right: 'left',\n      down: 'up',\n      left: 'right'\n    };\n    return oppositeDirections[direction];\n  }\n  function getNextDirection(triedDirections) {\n    const remainingDirections = ['up', 'right', 'down', 'left'].filter(direction => !triedDirections.includes(direction));\n    return remainingDirections[Math.floor(Math.random() * remainingDirections.length)];\n  }\n  function getNextArray(currentArray, direction) {\n    if (direction === 'up' || direction === 'down') {\n      return currentArray;\n    } else if (direction === 'right') {\n      return String.fromCharCode(currentArray.charCodeAt(0) + 1);\n    } else if (direction === 'left') {\n      return String.fromCharCode(currentArray.charCodeAt(0) - 1);\n    }\n  }\n  function getNextIndex(currentIndex, direction) {\n    if (direction === 'up') {\n      return currentIndex - 1;\n    } else if (direction === 'right' || direction === 'left') {\n      return currentIndex;\n    } else if (direction === 'down') {\n      return currentIndex + 1;\n    }\n  }\n  function isWithinBoundaries(array, index) {\n    return array >= 'a' && array <= 'j' && index >= 1 && index <= 10;\n  }\n  function isCellClicked(array, index) {\n    const currentCell = document.querySelector(`[data-array=\"${array}\"][data-index=\"${index}\"]`);\n    return currentCell.classList.contains('clicked');\n  }\n  function computerShipHit(randomCell) {\n    const shipName = randomCell.getAttribute('data-ship-name');\n    const ship = fieldPlayer.ships[shipName];\n    if (ship.isSunk()) {\n      const sunkShipNulls = fieldPlayer.shipNullCells[shipName];\n      if (sunkShipNulls) {\n        for (const coordinate of sunkShipNulls) {\n          const {\n            alphabet,\n            num\n          } = coordinate;\n          const cell = document.querySelector(`[data-array=\"${alphabet}\"][data-index=\"${num}\"]`);\n          if (cell) {\n            if (cell.style.backgroundColor !== 'gray') {\n              cell.style.backgroundColor = 'green';\n              cell.classList.add('clicked');\n            }\n          }\n        }\n      }\n    }\n  }\n  function endGame() {\n    gameFinished = true;\n    cellElements2.forEach(cellElement2 => {\n      cellElement2.removeEventListener('click', handleClick);\n    });\n    // Perform necessary actions to end the game\n  }\n\n  // Add click event listeners\n  cellElements2.forEach(cellElement2 => {\n    cellElement2.addEventListener('click', handleClick);\n  });\n}\nmodule.exports = {\n  startGame: startGame\n};\n\n//# sourceURL=webpack://restoran/./src/gameloop.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n\nconst {\n  createShips,\n  gameBoard\n} = __webpack_require__(/*! ./ships */ \"./src/ships.js\");\nconst {\n  domControl\n} = __webpack_require__(/*! ./domControl */ \"./src/domControl.js\");\nconst {\n  gameRound\n} = __webpack_require__(/*! ./gameloop */ \"./src/gameloop.js\");\nconsole.log(\"hey\");\nconst container = document.querySelector('.container');\nconst contentContainer = document.querySelector('.contentContainer');\nconst header = document.querySelector('.header');\nconst inputPlayer1 = document.createElement('input');\nconst inputPlayer2 = document.createElement('input');\nlet playervsPlayer = false;\ncontentContainer.style.display = 'none';\nconst childDiv2 = document.createElement('div');\nchildDiv2.classList.add('child2');\nconst startBattleShip = document.createElement('button');\nstartBattleShip.classList.add('startBattleship');\nstartBattleShip.textContent = 'Start Game';\nchildDiv2.appendChild(startBattleShip);\nconst logo = document.createElement('div');\nlogo.classList.add('logo');\nheader.appendChild(logo);\ncontainer.appendChild(childDiv2);\nstartBattleShip.addEventListener('click', () => {\n  // Remove the existing button\n  startBattleShip.remove();\n\n  // Create new buttons\n  const playPlayer = document.createElement('button');\n  const playComputer = document.createElement('button');\n\n  // Add classes to the new buttons\n  playPlayer.classList.add('startBattleship');\n  playComputer.classList.add('startBattleship');\n\n  // Set the text content of the buttons\n  playPlayer.textContent = 'Player vs Player';\n  playComputer.textContent = 'Player VS Computer';\n\n  // Append the new buttons to childDiv2\n  childDiv2.appendChild(playPlayer);\n  childDiv2.appendChild(playComputer);\n  playComputer.addEventListener('click', () => {\n    childDiv2.style.display = 'none';\n    contentContainer.style.display = 'grid';\n  });\n  playPlayer.addEventListener('click', () => {\n    childDiv2.innerHTML = '';\n    inputPlayer1.type = 'text';\n    inputPlayer1.textContent = 'Player 1';\n    inputPlayer1.placeholder = 'Player 1 Name (3-15 characters)';\n    inputPlayer1.classList.add('inputField');\n    inputPlayer2.type = 'text';\n    inputPlayer2.textContent = 'Player 2';\n    inputPlayer2.placeholder = 'Player 2 Name (3-15 characters)';\n    inputPlayer2.classList.add('inputField');\n    const startButton = document.createElement('button');\n    startButton.textContent = 'Start Game';\n    startButton.classList.add('playersButton');\n    const form = document.createElement('div');\n    form.classList.add('form');\n    form.appendChild(inputPlayer1);\n    form.appendChild(inputPlayer2);\n    childDiv2.appendChild(form);\n    form.appendChild(startButton);\n    startButton.addEventListener('click', () => {\n      if (inputPlayer1.value.length < 3 || inputPlayer1.value.length > 15 || inputPlayer2.value.length < 3 || inputPlayer2.value.length > 15) {\n        const errorMessage = document.createElement('p');\n        errorMessage.textContent = 'Player names must be between 3 and 15 characters.';\n        errorMessage.classList.add('error');\n        form.appendChild(errorMessage);\n        startButton.style.pointerEvents = 'none';\n        startButton.style.backgroundColor = 'red';\n        setTimeout(() => {\n          startButton.style.backgroundColor = 'transparent';\n        }, 200);\n        setTimeout(() => {\n          errorMessage.remove();\n          startButton.style.pointerEvents = 'auto';\n        }, 5000);\n      } else {\n        childDiv2.style.display = 'none';\n        contentContainer.style.display = 'grid';\n        playervsPlayer = true;\n      }\n    });\n  });\n});\n\n//# sourceURL=webpack://restoran/./src/index.js?");

/***/ }),

/***/ "./src/ships.js":
/*!**********************!*\
  !*** ./src/ships.js ***!
  \**********************/
/***/ ((module) => {

eval("function createShips(length, hit, sunk, name) {\n  return {\n    length: length,\n    hit: hit,\n    sunk: sunk,\n    name: name,\n    value: 'ship',\n    hitF: function () {\n      return this.hit++;\n    },\n    isSunk: function () {\n      if (this.length === this.hit) {\n        return this.sunk = true;\n      }\n    }\n  };\n}\nconst gameBoard = {\n  storedShips: [],\n  players: {\n    Player1: {\n      name: \"Player\",\n      turn: true,\n      arrays: {},\n      missedAttacks: [],\n      ships: {},\n      shipNullCells: {}\n\n      // other player properties and methods\n    },\n\n    Player2: {\n      name: \"Computer\",\n      turn: false,\n      arrays: {},\n      missedAttacks: [],\n      ships: {},\n      shipNullCells: {}\n      // other player properties and methods\n    }\n  },\n\n  createFields(player) {\n    const arrays = {};\n    for (let index = 0; index < 10; index++) {\n      const arrayName = String.fromCharCode(97 + index);\n      arrays[arrayName] = Array(10).fill(\"\");\n    }\n    player.arrays = arrays;\n    return arrays;\n  },\n  resetPlayerArrays(player) {\n    const newArray = {};\n    for (const key in player.arrays) {\n      newArray[key] = Array.from(Array(10), () => '1');\n    }\n    player.arrays = newArray;\n    return player.arrays;\n  },\n  shipMaker() {\n    const carrier = new createShips(5, 0, false, 'carrier');\n    const battleship = new createShips(4, 0, false, 'battleship');\n    const battleship2 = new createShips(4, 0, false);\n    const cruiser = new createShips(3, 0, false, 'cruiser');\n    const cruiser2 = new createShips(3, 0, false, 'cruiser2');\n    const cruiser3 = new createShips(3, 0, false, 'cruiser3');\n    const submarine = new createShips(2, 0, false, 'submarine');\n    const submarine2 = new createShips(2, 0, false, 'submarine2');\n    const submarine3 = new createShips(2, 0, false, 'submarine3');\n    const submarine4 = new createShips(2, 0, false);\n    const boat = new createShips(1, 0, false, 'boat');\n    const boat2 = new createShips(1, 0, false, 'boat2');\n    const boat3 = new createShips(1, 0, false, 'boat3');\n    const boat4 = new createShips(1, 0, false);\n    return {\n      carrier,\n      battleship,\n      // battleship2,\n      cruiser,\n      cruiser2,\n      cruiser3,\n      submarine,\n      submarine2,\n      submarine3,\n      // submarine4,\n\n      boat,\n      boat2,\n      boat3\n      // boat4,\n    };\n  },\n\n  placingShips(player, alphabet, num, ship, orientation = 'vertical') {\n    const targetArray = player.arrays[alphabet];\n    const shipLength = ship.length;\n    const nullCells = [];\n\n    // Check if the placement is valid\n    const isPlacementValid = (startIndex, endIndex, array) => {\n      if (orientation === 'vertical') {\n        for (let i = startIndex; i <= endIndex; i++) {\n          if (array[i] !== '') {\n            return false; // Overlapping ship found\n          }\n        }\n      } else if (orientation === 'horizontal') {\n        for (let i = startIndex; i <= endIndex; i++) {\n          const alphabetIndex = String.fromCharCode(i + 97);\n          if (player.arrays[alphabetIndex][num - 1] !== '') {\n            return false; // Overlapping ship found\n          }\n        }\n      }\n\n      return true; // No overlapping ships found\n    };\n\n    if (orientation === 'vertical') {\n      const startIndex = num - 1;\n      const endIndex = num - 1 + shipLength - 1;\n      if (!isPlacementValid(startIndex, endIndex, targetArray)) {\n        throw new Error('Invalid ship placement');\n      }\n      for (let i = startIndex; i <= endIndex; i++) {\n        targetArray[i] = ship;\n      }\n      for (let i = startIndex - 1; i <= endIndex + 1; i++) {\n        const alphabetIndex = String.fromCharCode(alphabet.charCodeAt(0) - 1);\n        const neighborArray = player.arrays[alphabetIndex];\n        if (neighborArray && i >= 0 && i < neighborArray.length) {\n          neighborArray[i] = null;\n          nullCells.push({\n            alphabet: alphabetIndex,\n            num: i + 1\n          });\n        }\n      }\n      for (let i = startIndex - 1; i <= endIndex + 1; i++) {\n        const alphabetIndex = String.fromCharCode(alphabet.charCodeAt(0) + 1);\n        const neighborArray = player.arrays[alphabetIndex];\n        if (neighborArray && i >= 0 && i < neighborArray.length) {\n          neighborArray[i] = null;\n          nullCells.push({\n            alphabet: alphabetIndex,\n            num: i + 1\n          });\n        }\n      }\n      if (startIndex - 1 >= 0) {\n        targetArray[startIndex - 1] = null;\n        nullCells.push({\n          alphabet,\n          num: startIndex\n        });\n      }\n      if (endIndex + 1 < targetArray.length) {\n        targetArray[endIndex + 1] = null;\n        nullCells.push({\n          alphabet,\n          num: endIndex + 2\n        });\n      }\n    } else if (orientation === 'horizontal') {\n      const startIndex = alphabet.charCodeAt(0) - 97;\n      const endIndex = startIndex + shipLength - 1;\n      if (!isPlacementValid(startIndex, endIndex, targetArray)) {\n        throw new Error('Invalid ship placement');\n      }\n      for (let i = startIndex; i <= endIndex; i++) {\n        const alphabetIndex = String.fromCharCode(i + 97);\n        player.arrays[alphabetIndex][num - 1] = ship;\n      }\n      for (let i = startIndex; i <= endIndex; i++) {\n        const alphabetIndex = String.fromCharCode(i + 97);\n        if (player.arrays.hasOwnProperty(alphabetIndex)) {\n          if (player.arrays[alphabetIndex].hasOwnProperty(num - 2)) {\n            player.arrays[alphabetIndex][num - 2] = null;\n            nullCells.push({\n              alphabet: alphabetIndex,\n              num: num - 1\n            });\n          }\n          if (player.arrays[alphabetIndex].hasOwnProperty(num)) {\n            player.arrays[alphabetIndex][num] = null;\n            nullCells.push({\n              alphabet: alphabetIndex,\n              num: num + 1\n            });\n          }\n        }\n      }\n      const alphabetIndexLeft = String.fromCharCode(startIndex - 1 + 97);\n      const alphabetIndexRight = String.fromCharCode(endIndex + 1 + 97);\n      if (player.arrays.hasOwnProperty(alphabetIndexLeft)) {\n        if (player.arrays[alphabetIndexLeft].hasOwnProperty(num - 2)) {\n          player.arrays[alphabetIndexLeft][num - 2] = null;\n          nullCells.push({\n            alphabet: alphabetIndexLeft,\n            num: num - 1\n          });\n        }\n        player.arrays[alphabetIndexLeft][num - 1] = null;\n        nullCells.push({\n          alphabet: alphabetIndexLeft,\n          num: num\n        });\n        if (player.arrays[alphabetIndexLeft].hasOwnProperty(num)) {\n          player.arrays[alphabetIndexLeft][num] = null;\n          nullCells.push({\n            alphabet: alphabetIndexLeft,\n            num: num + 1\n          });\n        }\n      }\n      if (player.arrays.hasOwnProperty(alphabetIndexRight)) {\n        if (player.arrays[alphabetIndexRight].hasOwnProperty(num - 2)) {\n          player.arrays[alphabetIndexRight][num - 2] = null;\n          nullCells.push({\n            alphabet: alphabetIndexRight,\n            num: num - 1\n          });\n        }\n        player.arrays[alphabetIndexRight][num - 1] = null;\n        nullCells.push({\n          alphabet: alphabetIndexRight,\n          num: num\n        });\n        if (player.arrays[alphabetIndexRight].hasOwnProperty(num)) {\n          player.arrays[alphabetIndexRight][num] = null;\n          nullCells.push({\n            alphabet: alphabetIndexRight,\n            num: num + 1\n          });\n        }\n      }\n    } else {\n      throw new Error('Invalid orientation: choose either \"vertical\" or \"horizontal\"');\n    }\n    player.shipNullCells[ship.name] = nullCells;\n  },\n  receiveAttack(player, alphabet, num) {\n    const targetArray = player.arrays[alphabet];\n    const element = targetArray[num - 1];\n    if (element && typeof element === 'object' && element.hasOwnProperty('hitF')) {\n      element.hitF();\n      element.isSunk();\n    } else {\n      this.attackMissed(player, alphabet, num);\n    }\n  },\n  attackMissed(player, alphabet, num) {\n    player.missedAttacks.push(`${alphabet},${num}`);\n  },\n  areAllShipsSunk(player) {\n    for (const key in player.arrays) {\n      const array = player.arrays[key];\n      for (const element of array) {\n        if (element && typeof element === 'object' && element.hasOwnProperty('sunk') && !element.sunk) {\n          return false;\n        }\n      }\n    }\n    return true;\n  },\n  turnsForAttacks() {\n    if (this.players.Player2.turn === true) {\n      // Player 2's turn\n      let randomAlph, randomNumber;\n      let isAlreadyAttacked = true;\n      while (isAlreadyAttacked) {\n        const randomValues = this.generateRandom();\n        randomAlph = randomValues.char;\n        randomNumber = randomValues.number;\n        const targetArray = this.player.Player2.arrays[randomAlph];\n        const element = targetArray[randomNumber - 1];\n        isAlreadyAttacked = typeof element === 'object' && element.hasOwnProperty('hit');\n      }\n      this.receiveAttack(randomAlph, randomNumber);\n      this.players.Player2.turn = false;\n      this.players.Player1.turn = true;\n    }\n  },\n  generateRandom() {\n    const alphabet = 'abcdefghij';\n    const randomAlph = alphabet[Math.floor(Math.random() * alphabet.length)];\n    const randomNumber = Math.floor(Math.random() * 10) + 1;\n    return {\n      char: randomAlph,\n      number: randomNumber\n    };\n  }\n};\nmodule.exports = {\n  createShips: createShips,\n  gameBoard: gameBoard\n};\n\n//# sourceURL=webpack://restoran/./src/ships.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ \"./node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! Icons/ship10.jpeg */ \"./src/Icons/ship10.jpeg\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! Icons/ship2.gif */ \"./src/Icons/ship2.gif\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! Icons/ship4.jpg */ \"./src/Icons/ship4.jpg\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(/*! Icons/map5.jpeg */ \"./src/Icons/map5.jpeg\"), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n    margin: 0;\\n    padding: 0;\\n    overflow: hidden;\\n    font-family: 'Times New Roman', Times, serif;\\n}\\n.form {\\n    display: grid;\\n    grid-template-rows: auto;\\n    gap: 15px;\\n}\\n.playersButton {\\n   \\n    place-self: center;\\n   \\n    padding: 25px;\\n    border-radius: 10px;\\n    border: none;\\n    background-color: rgba(0, 128, 255, 0.3);\\n    color: #ffffff;\\n    font-size: 20px;\\n    margin-bottom: 10px;\\n    border: 2px solid white;\\n    cursor: pointer;\\n    transition: background-color 0.3s, color 0.3s, box-shadow 0.3s;\\n}\\n\\n.playersButton:hover {\\n    background-color: rgba(0, 128, 255, 0.5);\\n    transform: scale(1.05);\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\n}\\n\\n.playersButton:active {\\n    background-color: rgba(0, 128, 255, 0.7);\\n    transform: scale(0.98);\\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\\n}\\n .inputField {\\n     padding: 15px;\\n     border-radius: 10px;\\n     border: none;\\n     background-color: rgba(0, 128, 255, 0.3);\\n     color: #ffffff;\\n     font-size: 20px;\\n     margin-bottom: 10px;\\n     width: 300px;\\n     border: 1px solid white;\\n }\\n\\n .inputField:focus {\\n     outline: none;\\n     background-color: rgba(0, 128, 255, 0.5);\\n     border: 2px solid white;\\n }\\n .error {\\n     color: red;\\n     font-size: 18px;\\n }\\n.header {\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n        background-size: cover;\\n        display: grid;\\n        justify-content: center;\\n        place-items: center;\\n        border-bottom: 3px solid black;\\n        height: 20vh;\\n        \\n         -webkit-animation: slidein 60s;\\n            animation: slidein 60s;\\n        \\n            -webkit-animation-fill-mode: forwards;\\n            animation-fill-mode: forwards;\\n        \\n            -webkit-animation-iteration-count: infinite;\\n            animation-iteration-count: infinite;\\n        \\n            -webkit-animation-direction: alternate;\\n            animation-direction: alternate; \\n}\\n        \\n             @-webkit-keyframes slidein {\\n            from {\\n                background-position: top;\\n                background-size: 1000px;\\n            }\\n        \\n            to {\\n                background-position: bottom;\\n                background-size: 1000px;\\n            }\\n        }\\n        \\n        @keyframes slidein {\\n            from {\\n                background-position: top;\\n                background-size: 1000px;\\n            }\\n        \\n            to {\\n                background-position: bottom;\\n                background-size: 1000px;\\n            }\\n        \\n        \\n        } \\n\\n.child2 {\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\n    background-size: cover;\\n    display: grid;\\n    grid-template-columns: 1fr auto;\\n   \\n    justify-content: center;\\n    place-items: center;\\n    \\n\\n\\n}\\n.startBattleship {\\n    display: inline-block;\\n    white-space: nowrap;\\n    cursor: pointer;\\n    padding: 25px 50px;\\n    border: 3px solid #ffffff;\\n    border-radius: 8px;\\n    color: #ffffff;\\n    font-size: 35px;\\n    font-weight: 800;\\n    text-decoration: none;\\n    background-color: transparent;\\n    transition: background-color 0.3s, color 0.3s, box-shadow 0.3s;\\n    margin-right: 1.2rem;\\n}\\n\\n.startBattleship:hover {\\n    background-color: rgba(255, 255, 255, 0.1);\\n    color: #ffffff;\\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);\\n    text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\\n    transform: scale(1.05);\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\n}\\n\\n.startBattleship:active {\\n    background-color: rgba(255, 255, 255, 0.2);\\n    color: #ffffff;\\n    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\\n    text-shadow: 0 0 10px rgba(130, 207, 255, 0.7);\\n    color: rgb(168, 255, 255);\\n}\\n.logo {\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \");\\n    background-size: cover;\\n    height: 164px;\\n        /* Calculate the height based on the original aspect ratio */\\n    width: 475px;\\n        /* Desired width */\\n    \\n        filter: drop-shadow(0 0 10px rgba(204, 204, 255, 0.5));\\n        /* Adjust the glow color and size */\\n        margin-bottom: 7px;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.container {\\n    display: grid;\\n    grid-template-columns: 1fr;\\n    grid-template-rows: 1fr 5fr;\\n    height: 100vh;\\n    \\n}\\n\\n\\n\\n.contentContainer {\\n    position: relative;\\n}\\n\\n.contentContainer::before {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \");\\n    background-size: 99%;\\n    background-position: center 60%;\\n    background-attachment: fixed;\\n    filter: blur(5px);\\n    z-index: -1;\\n}\\n\\n/* Rest of your styles for .contentContainer */\\n.contentContainer {\\n    display: grid;\\n    grid-template-areas:\\n        \\\". . enemysbox\\\"\\n        \\\". playersbox .\\\"\\n        \\\". . start-button\\\";\\n    height: 85vh;\\n    grid-template-rows: auto;\\n        /* Adjust the row sizes as needed */\\n        grid-template-columns: auto;\\n        \\n}\\n.start-button {\\n    grid-area: start-button;\\n    justify-self: start;\\n    place-self: start;\\n    \\n    display: inline-block;\\n        white-space: nowrap;\\n        cursor: pointer;\\n        padding: 10px 20px;\\n        border: 1px solid #ffffff;\\n        border-radius: 8px;\\n        color: #ffffff;\\n        font-size: 25px;\\n        font-weight: 400;\\n        text-decoration: none;\\n        background-color: transparent;\\n        transition: background-color 0.3s, color 0.3s, box-shadow 0.3s;\\n        margin-left: -20%;\\n        \\n}\\n.start-button:hover {\\n    background-color: rgba(255, 255, 255, 0.1);\\n    color: #ffffff;\\n    box-shadow: 0 0 10px rgba(255, 0, 0, 0.3);\\n    text-shadow: 0 0 10px rgba(255, 0, 0, 0.5);\\n}\\n\\n.start-button:hover:active {\\n    background-color: rgba(255, 255, 255, 0.2);\\n    color: #ffffff;\\n    box-shadow: 0 0 10px rgba(255, 0, 0, 0.5);\\n    text-shadow: 0 0 10px rgba(255, 0, 0, 0.7);\\n    color: rgb(255, 0, 0);\\n}\\n.playersBox {\\n    grid-area: playersbox;\\n    display: grid;\\n    grid-template-areas: \\n        \\\". alphabet alphabet\\\"\\n        \\\"num cont cont\\\"\\n        \\\"num cont cont\\\";\\n    justify-content: center;\\n    place-content: center;\\n    \\n    \\n    \\n    \\n    \\n  \\n    \\n    \\n}\\n.alphabet {\\n    grid-area: alphabet;\\n    display: grid;\\n    grid-template-columns: repeat(10, 1fr);\\n    justify-items: center;\\n    font-size: 25px;\\n    color: black;\\n    text-shadow: 0px 0px 2px rgba(255, 0, 0, 0.5);\\n}\\n\\n.numbers {\\n    grid-area: num;\\n    display: grid;\\n    grid-template-rows: repeat(10, 1fr);\\n    justify-items: center;\\n    color: black;\\n    font-size: 25px;\\n    text-shadow: 0px 0px 2px rgba(255, 0, 0, 0.5);\\n}\\n\\n.number-cell {\\n    align-self: flex-start;\\n    justify-self: start;\\n    place-self: start;\\n    margin-right: 1px;\\n}\\n\\n.content {\\n    grid-area: cont;\\n    background-color: transparent;\\n    display: grid;\\n    grid-template-columns: repeat(10, 1fr);\\n    grid-gap: 0;\\n    min-height: 35vh;\\n    min-width: 35vw;\\n    border: 4px solid black;\\n    \\n\\n}\\n\\n.cell {\\n    position: relative;\\n    padding-bottom: 0;\\n    background-color: transparent;\\n    border: 1px solid black;\\n    aspect-ratio: 1/1;\\n    /* Ensures a perfect square */\\n}\\n\\n.enemysBox {\\n    grid-area: enemysbox;\\n    display: none;\\n    grid-template-areas:\\n        \\\". alphabet alphabet\\\"\\n        \\\"num cont cont\\\"\\n        \\\"num cont cont\\\";\\n    justify-content: center;\\n    place-content: center;\\n    min-height: 20vh;\\n    min-width: 20vw;\\n    margin-left: -10%;\\n    \\n}\\n.content2 {\\n    grid-area: cont;\\n    background-color: transparent;\\n        display: grid;\\n        grid-template-columns: repeat(10, 1fr);\\n        grid-gap: 0;\\n        min-height: 20vh;\\n        min-width: 20vw;\\n        border: 4px solid black;\\n\\n\\n}\\n.alphabet2 {\\n    grid-area: alphabet;\\n    display: grid;\\n        grid-template-columns: repeat(10, 1fr);\\n        justify-items: center;\\n        font-size: 15px;\\n        color: black;\\n        text-shadow: 0px 0px 2px rgba(255, 0, 0, 0.5);\\n\\n}\\n\\n.numbers2 {\\n    grid-area: num;\\n    display: grid;\\n        grid-template-rows: repeat(10, 1fr);\\n        justify-items: center;\\n        color: black;\\n        font-size: 15px;\\n        text-shadow: 0px 0px 2px rgba(255, 0, 0, 0.5);\\n\\n}\\n.cell2 {\\n    position: relative;\\n    padding-bottom: 0;\\n        background-color: transparent;\\n        border: 1px solid black;\\n        aspect-ratio: 1/1;\\n    /* Ensures a perfect square */\\n}\\n\\n.dragging {\\n    opacity: 0.5;\\n    border: 2px dashed red;\\n}\\n.drag-image {\\n    border: 2px solid red;\\n}\\n@keyframes vibrate {\\n    0% {\\n        transform: translate(-2px, -2px);\\n    }\\n\\n    25% {\\n        transform: translate(2px, 2px);\\n    }\\n\\n    50% {\\n        transform: translate(-2px, -2px);\\n    }\\n\\n    75% {\\n        transform: translate(2px, 2px);\\n    }\\n\\n    100% {\\n        transform: translate(-2px, -2px);\\n    }\\n}\\n\\n.vibrate {\\n    animation: vibrate 0.5s infinite;\\n    background-color: red;\\n}\\n\\n.contentContainer.new-layout {\\n    /* New layout styles */\\n    grid-template-areas:\\n        \\\". . .\\\"\\n        \\\". playersboxx enemysbox\\\";\\n    grid-template-rows: 0.6fr 1fr;\\n    grid-template-columns: 0.85fr 1fr 1fr;\\n    justify-items: start;\\n}\\n.contentContainer.new-layout::before {\\n    filter: none;\\n}\\n.playersBox.new-layout {\\n    grid-area: playersboxx;\\n    display: grid;\\n    grid-template-areas:\\n        \\\". alphabet alphabet\\\"\\n        \\\"num cont cont\\\"\\n        \\\"num cont cont\\\";\\n    justify-content: center;\\n    place-content: center;\\n    min-height: 20vh;\\n        min-width: 20vw;\\n}\\n.content.new-layout {\\n    grid-area: cont;\\n    background-color: transparent;\\n    display: grid;\\n    grid-template-columns: repeat(10, 1fr);\\n    grid-gap: 0;\\n    min-height: 20vh;\\n    min-width: 20vw;\\n    border: 4px solid black;\\n\\n\\n}\\n.numbers.new-layout {\\n    grid-area: num;\\n    display: grid;\\n    grid-template-rows: repeat(10, 1fr);\\n    justify-items: center;\\n    color: black;\\n    font-size: 15px;\\n    text-shadow: 0px 0px 2px rgba(255, 0, 0, 0.5);\\n}\\n\\n.alphabet.new-layout {\\n    grid-area: alphabet;\\n    display: grid;\\n    grid-template-columns: repeat(10, 1fr);\\n    justify-items: center;\\n    font-size: 15px;\\n    color: black;\\n    text-shadow: 0px 0px 2px rgba(255, 0, 0, 0.5);\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://restoran/./src/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://restoran/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};\n\n//# sourceURL=webpack://restoran/./node_modules/css-loader/dist/runtime/getUrl.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://restoran/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://restoran/./src/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://restoran/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://restoran/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://restoran/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://restoran/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://restoran/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://restoran/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/Icons/map5.jpeg":
/*!*****************************!*\
  !*** ./src/Icons/map5.jpeg ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"54784f9f3dc3472a0903.jpeg\";\n\n//# sourceURL=webpack://restoran/./src/Icons/map5.jpeg?");

/***/ }),

/***/ "./src/Icons/ship10.jpeg":
/*!*******************************!*\
  !*** ./src/Icons/ship10.jpeg ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"0c64259f663d39fdd0e2.jpeg\";\n\n//# sourceURL=webpack://restoran/./src/Icons/ship10.jpeg?");

/***/ }),

/***/ "./src/Icons/ship2.gif":
/*!*****************************!*\
  !*** ./src/Icons/ship2.gif ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"ba4352527a49c685ce2d.gif\";\n\n//# sourceURL=webpack://restoran/./src/Icons/ship2.gif?");

/***/ }),

/***/ "./src/Icons/ship4.jpg":
/*!*****************************!*\
  !*** ./src/Icons/ship4.jpg ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"dea21b355bb69d55e1ad.jpg\";\n\n//# sourceURL=webpack://restoran/./src/Icons/ship4.jpg?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;